// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace accomondationApp.Models;

public partial class HotelAppDBContext : DbContext
{
    public HotelAppDBContext(DbContextOptions<HotelAppDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Customer> Customers { get; set; }

    public virtual DbSet<DisplayedMonth> DisplayedMonths { get; set; }

    public virtual DbSet<PaymentStatus> PaymentStatuses { get; set; }

    public virtual DbSet<PicturePath> PicturePaths { get; set; }

    public virtual DbSet<Reservation> Reservations { get; set; }

    public virtual DbSet<Room> Rooms { get; set; }

    public virtual DbSet<RoomCapacity> RoomCapacities { get; set; }

    public virtual DbSet<Slide> Slides { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Customer>(entity =>
        {
            entity.HasKey(e => e.CustomerId).HasName("PK__Customer__B611CB7D15FFCAC6");

            entity.ToTable("Customer");

            entity.Property(e => e.CustomerId).HasColumnName("customerId");
            entity.Property(e => e.CreationDate)
                .HasComputedColumnSql("(getdate())", false)
                .HasColumnType("datetime")
                .HasColumnName("creationDate");
            entity.Property(e => e.Email)
                .HasMaxLength(200)
                .HasColumnName("email");
            entity.Property(e => e.Name)
                .HasMaxLength(250)
                .HasColumnName("name");
        });

        modelBuilder.Entity<DisplayedMonth>(entity =>
        {
            entity.HasKey(e => e.DisplayedMonthId).HasName("PK__Displaye__0F705D7C2F66722A");

            entity.ToTable("DisplayedMonth");

            entity.Property(e => e.DisplayedMonthId).HasColumnName("displayedMonthId");
            entity.Property(e => e.DisplayedMonths).HasColumnName("displayedMonths");
        });

        modelBuilder.Entity<PaymentStatus>(entity =>
        {
            entity.HasKey(e => e.PaymentStatusId).HasName("PK__PaymentS__29CD0BBCC4FBF458");

            entity.ToTable("PaymentStatus");

            entity.Property(e => e.PaymentStatusId)
                .ValueGeneratedNever()
                .HasColumnName("paymentStatusId");
            entity.Property(e => e.Payed).HasColumnName("payed");
            entity.Property(e => e.PaymentStatus1)
                .IsRequired()
                .HasMaxLength(200)
                .HasColumnName("paymentStatus");
        });

        modelBuilder.Entity<PicturePath>(entity =>
        {
            entity.HasKey(e => e.PicturePathId).HasName("PK__PictureP__ED288B82C58E4B25");

            entity.ToTable("PicturePath");

            entity.Property(e => e.PicturePathId).HasColumnName("picturePathId");
            entity.Property(e => e.AltText)
                .HasMaxLength(250)
                .HasColumnName("altText");
            entity.Property(e => e.SlideId).HasColumnName("slideId");
            entity.Property(e => e.Src)
                .HasMaxLength(250)
                .HasColumnName("src");

            entity.HasOne(d => d.Slide).WithMany(p => p.PicturePaths)
                .HasForeignKey(d => d.SlideId)
                .HasConstraintName("FK__PicturePa__slide__2CF2ADDF");
        });

        modelBuilder.Entity<Reservation>(entity =>
        {
            entity.HasKey(e => e.ReservationId).HasName("PK__Reservat__B14BF5C56D2F3B3C");

            entity.ToTable("Reservation");

            entity.Property(e => e.ReservationId).HasColumnName("reservationId");
            entity.Property(e => e.CustomerId).HasColumnName("customerId");
            entity.Property(e => e.EndDate)
                .HasColumnType("date")
                .HasColumnName("endDate");
            entity.Property(e => e.PaymentStatusId).HasColumnName("paymentStatusId");
            entity.Property(e => e.ReservationDate)
                .HasComputedColumnSql("(getdate())", false)
                .HasColumnType("datetime")
                .HasColumnName("reservationDate");
            entity.Property(e => e.RommId).HasColumnName("rommId");
            entity.Property(e => e.StartDate)
                .HasColumnType("date")
                .HasColumnName("startDate");

            entity.HasOne(d => d.Customer).WithMany(p => p.Reservations)
                .HasForeignKey(d => d.CustomerId)
                .HasConstraintName("FK__Reservati__custo__4316F928");

            entity.HasOne(d => d.PaymentStatus).WithMany(p => p.Reservations)
                .HasForeignKey(d => d.PaymentStatusId)
                .HasConstraintName("FK__Reservati__payme__0C85DE4D");

            entity.HasOne(d => d.Romm).WithMany(p => p.Reservations)
                .HasForeignKey(d => d.RommId)
                .HasConstraintName("FK__Reservati__rommI__44FF419A");
        });

        modelBuilder.Entity<Room>(entity =>
        {
            entity.HasKey(e => e.RoomId).HasName("PK__Room__6C3BF5BE27310E7E");

            entity.ToTable("Room");

            entity.Property(e => e.RoomId).HasColumnName("roomId");
            entity.Property(e => e.RoomCapacityId).HasColumnName("roomCapacityId");
            entity.Property(e => e.RoomNumber)
                .HasMaxLength(250)
                .HasColumnName("roomNumber");

            entity.HasOne(d => d.RoomCapacity).WithMany(p => p.Rooms)
                .HasForeignKey(d => d.RoomCapacityId)
                .HasConstraintName("FK__Room__roomCapaci__0D7A0286");
        });

        modelBuilder.Entity<RoomCapacity>(entity =>
        {
            entity.HasKey(e => e.RoomCapacityId).HasName("PK__RoomCapa__FB83523FD0083160");

            entity.ToTable("RoomCapacity");

            entity.Property(e => e.RoomCapacityId)
                .ValueGeneratedNever()
                .HasComment("it shows the number of beds")
                .HasColumnName("roomCapacityId");
            entity.Property(e => e.Capacity).HasColumnName("capacity");
        });

        modelBuilder.Entity<Slide>(entity =>
        {
            entity.HasKey(e => e.SlideId).HasName("PK__Slides__52D88E3FFD2EC7A6");

            entity.Property(e => e.SlideId).HasColumnName("slideId");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}